# version 330 core

layout(location = 0) in vec2 position;
layout(location = 1) in vec2 pointA;
layout(location = 2) in vec2 pointB;
layout(location = 3) in float width;
layout(location = 4) in vec3 vertexColor;

out vec3 fragmentColor;

uniform mat4 View_Proj;

void main() {
    vec2 xBasis = pointB - pointA;
    vec2 yBasis = normalize(vec2(-xBasis.y, xBasis.x));

    vec2 point = pointA + xBasis*position.x + yBasis*width*position.y;

    gl_Position = View_Proj * vec4(point, 0, 1);
    //gl_Position = View_Proj * vec4(position, 0, 1);


    fragmentColor = vertexColor;
}
